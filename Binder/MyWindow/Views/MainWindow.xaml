<Window x:Class="Binder.MyWindow.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Binder"
        xmlns:converter ="clr-namespace:Binder.Common"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        
        mc:Ignorable="d"
        Title="レイアウト図専用PDFファイル出力ソフト" Height="600" Width="550">

    <!--リソース-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Binder;component/Common/ControlResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <!--Resources内にコンバーターの使用を宣言する。-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <!--ログタイトル-->
        <TextBlock Grid.Row="0" Margin="10,0" HorizontalAlignment="Left" Text="設定:"/>
        
        <!--設定-->
        <Grid Grid.Row="1" Margin="10,5" Background="WhiteSmoke">
            <Border BorderThickness="1" BorderBrush="Gray">
                <Grid Height="380" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!-- 出力対象ファイルリスト -->
                    <Grid Grid.Row="0" Margin="10,0" IsEnabled="{qc:Binding '!$P', P={Binding IsOutputProcess}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock HorizontalAlignment="Left" Text="出力対象ファイルリスト:　" />
                            <TextBlock HorizontalAlignment="Left" Text="フォルダまたはファイルをドラッグ＆ドロップしてください。" Foreground="Gray" Height="15" VerticalAlignment="Top"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,5">
                            <!--フィルタ設定-->
                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="読み込みファイル種類:" Margin="0,0,10,0"/>
                            <ComboBox x:Name="FilterComboBox"
                                  Width="150"
                                  ItemsSource="{Binding FilterEnumNameDictionary}"
                                  DisplayMemberPath="Value"
                                  SelectedValuePath="Key"/>
                        </StackPanel>
                        <!--リスト-->
                        <ListView x:Name="PathListView"
                                  Grid.Row="2" Margin="10,0"
                                  SelectionMode="Extended"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  AllowDrop="True"
                                  ItemsSource="{Binding}"
                                  Loaded="PathListView_Loaded"
                                  KeyDown="PathListView_KeyDown"                                  
                                  PreviewMouseLeftButtonDown="PathListView_PreviewMouseLeftButtonDown"
                                  MouseMove="PathListView_MouseMove"
                                  DragEnter="PathListView_DragEnter"
                                  Drop="PathListView_Drop"
                                  >
                            <!--Context  Menu Settings-->
                            <ListView.ContextMenu>
                                <ContextMenu Name="ZonePathListView" StaysOpen="true" Background="WhiteSmoke">
                                    <ContextMenu.BitmapEffect>
                                        <BitmapEffectGroup/>
                                    </ContextMenu.BitmapEffect>
                                    <MenuItem Header="削除" Name="RemoveNutritionContextMenu"  Click="RemoveNutritionContextMenu_Click"/>
                                </ContextMenu>
                            </ListView.ContextMenu>

                            <!--Bind Item & Header Settings-->
                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>
                                        <GridViewColumn Width="auto" DisplayMemberBinding="{Binding ParentFolder, Mode=TwoWay}" >
                                            <GridViewColumnHeader Tag="ParentFolderHeader" Content="親フォルダ" Click="GridViewColumnHeader_Click"/>
                                        </GridViewColumn>
                                        <GridViewColumn Width="auto" DisplayMemberBinding="{Binding FileName, Mode=TwoWay}">
                                            <GridViewColumnHeader Tag="FileNameHeader" Content="ファイル名" Click="GridViewColumnHeader_Click"/>
                                        </GridViewColumn>
                                        <GridViewColumn Width="auto" DisplayMemberBinding="{Binding Format, Mode=TwoWay}">
                                            <GridViewColumnHeader Tag="FormatHeader" Content="拡張子" Click="GridViewColumnHeader_Click"/>
                                        </GridViewColumn>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <!--リスト操作ボタン-->
                        <StackPanel Orientation="Horizontal" Grid.Row="4" HorizontalAlignment="Right" Margin="10,0">
                            <!--読込対象外リスト設定-->
                            <Button x:Name="NotTargetEditButton"  Margin="0,5,5,5" Padding="5,2"
                                Content="読込対象外リスト編集" Click="NotTargetEditButton_Click"
                                IsEnabled="{qc:Binding '!$P', P={Binding IsOutputProcess}}"/>
                            <!--初期化ボタン-->
                            <Button x:Name="ClearButton"
                                Content="リスト初期化" Margin="0,5" Padding="5,2" Click="ClearButton_Click" 
                                IsEnabled="{qc:Binding '!$P', P={Binding IsOutputProcess}}"/>
                        </StackPanel>
                    </Grid>

                    <!--出力形式設定-->
                    <Grid Grid.Row="1" Margin="10,5" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="ファイル結合:" Width="70"/>
                        <StackPanel Grid.Column="1" x:Name="PanelExportFormat">
                            <CheckBox Margin="20,0" Content="出力後，すべてのファイルを結合する" IsChecked="{Binding IsPdfCombine}"/>
                            <DockPanel Margin="40,0">
                                <TextBlock Text="結合ファイル名:" Width="80"/>
                                <TextBox Style="{DynamicResource CommonTextBox}"
                                         MinWidth="150"
                                         Text="{Binding OutputFileName, Mode=TwoWay}"
                                         IsEnabled="{qc:Binding '$P', P={Binding IsPdfCombine}}"/>
                                <TextBlock Text=".pdf"/>
                            </DockPanel>
                            <!--以下，未実装 TODO-->
                            <RadioButton Visibility="Collapsed" IsEnabled="False" Content="DocuWorks形式" GroupName="groupExportFormat" IsChecked="{Binding IsDocuWorksFormat}"/>
                            <RadioButton Visibility="Collapsed" IsEnabled="{qc:Binding '!$P', P={Binding IsDocuWorksFormat}}" Content="DocuWorks文書 (.xdw)" GroupName="groupExportDocuWorksFormat" IsChecked="{Binding IsDocuWorksDocument}" Margin="20,0"/>
                            <RadioButton Visibility="Collapsed" IsEnabled="{qc:Binding '!$P', P={Binding IsDocuWorksFormat}}" Content="DocuWorksバインダー (.xbd)" GroupName="groupExportDocuWorksFormat" IsChecked="{Binding IsDocuWorksBinder}" Margin="20,0"/>

                        </StackPanel>
                    </Grid>

                    <!--保存先設定-->
                    <Grid Grid.Row="3" Margin="10,5" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="保存先:" Width="70"/>
                        <TextBox Grid.Column="1" x:Name="SaveFolderText" MinWidth="100"
                                 Style="{DynamicResource CommonTextBox}"
                                 Text="{Binding OutputDirectory, Mode=TwoWay}"
                                 IsEnabled="False"/>
                        <Button Grid.Column="2" Content="開く" Width="40" Margin="5,0" Click="OpenSaveFolderButton_Click"/>
                    </Grid>
                </Grid>
            </Border>
        </Grid>

        <!--ボタン群-->
        <StackPanel Grid.Row="2" Margin="0" Orientation="Horizontal" HorizontalAlignment="Right">
            <!--中断ボタン-->
            <Button x:Name="CancelButton"
                                Content="中断" Margin="0"
                                IsEnabled="{Binding Path=IsOutputProcess}"
                                Style="{DynamicResource CommonRoundButton}"
                                Click="CancelButton_Click"/>
            <!--実行ボタン-->
            <Button x:Name="OutputBinderButon"
                                Content="出力" Margin="10,0" Command="{Binding ExportCommand}"
                                IsEnabled="{qc:Binding '!$P', P={Binding IsOutputProcess}}"
                                Style="{DynamicResource CommonRoundButton}"/>
        </StackPanel>

        <!--ログ-->
        <Grid Grid.Row="3" IsEnabled="{qc:Binding '!$P', P={Binding IsOutputProcess}}" Margin="0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--進捗率タイトル-->
            <DockPanel Grid.Row="0">
                <TextBlock DockPanel.Dock ="Left" Margin="10,0" Text="進捗率:"/>
                <!--プログレスバー-->
                <ProgressBar x:Name="OutputProgressBar" DockPanel.Dock="Right"
                                     Margin="10,0"
                                     Height="15"
                                     Minimum="0"
                                     Maximum="100"
                                     Value="{Binding ProgressValue}"/>
            </DockPanel>

            <!--ログタイトル-->
            <TextBlock Grid.Row="1" Margin="10,5,0,0" HorizontalAlignment="Left" Text="ログ:"/>

            <!--ログ専用リストボックス-->
            <ListBox Grid.Row="2" x:Name="LogListBox" Margin="10,0,10,5" Height="60"
                         ItemsSource="{Binding Path=LogList, NotifyOnTargetUpdated=True}"
                         ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2"
                         TargetUpdated="LogListBox_TargetUpdated">
            </ListBox>
        </Grid>
    </Grid>
</Window>
